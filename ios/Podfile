# üì± PODFILE CORREGIDO - MiProveedor
# FIX SIMPLIFICADO que funciona - Sin errores Ruby
# Enfoque directo para resolver baseConfigurationReference

platform :ios, '13.0'

# Configuraciones CI/CD
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  # üî• FLUTTER MANEJA TODAS LAS DEPENDENCIAS
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

# üì± POST-INSTALL SIMPLIFICADO PERO EFECTIVO
post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # üéØ CONFIGURAR DEPLOYMENT TARGET
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
    end
  end
  
  puts "\nüîß APLICANDO FIX SIMPLIFICADO PARA COCOAPODS BASE CONFIGURATION..."
  
  # üî• FIX 1: LIMPIAR PROYECTOS PODS
  installer.generated_projects.each do |project|
    project.targets.each do |target|
      target.build_configurations.each do |config|
        config.base_configuration_reference = nil
      end
    end
    puts "‚úÖ Pods projects: base configurations limpiadas"
  end
  
  # üî• FIX 2: LIMPIAR PROYECTO RUNNER PRINCIPAL (M√âTODO SIMPLIFICADO)
  installer.aggregate_targets.each do |aggregate_target|
    aggregate_target.user_project.targets.each do |target|
      target.build_configurations.each do |config|
        if config.base_configuration_reference
          puts "üéØ Limpiando #{target.name} - #{config.name} baseConfigurationReference"
          config.base_configuration_reference = nil
        end
      end
    end
    puts "‚úÖ Runner project: base configurations limpiadas"
  end
  
  # üî• FIX 3: FORZAR INHERITED SETTINGS PARA FRAMEWORKS
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      # Asegurar que FRAMEWORK_SEARCH_PATHS y LIBRARY_SEARCH_PATHS incluyan $(inherited)
      config.build_settings['FRAMEWORK_SEARCH_PATHS'] ||= ['$(inherited)']
      config.build_settings['LIBRARY_SEARCH_PATHS'] ||= ['$(inherited)']
      config.build_settings['OTHER_LDFLAGS'] ||= ['$(inherited)']
      
      # Configuraciones espec√≠ficas para resolver BoringSSL-GRPC
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      config.build_settings['DEFINES_MODULE'] = 'YES'
    end
  end
  puts "‚úÖ Framework search paths: configurados con $(inherited)"
  
  # ‚úÖ MENSAJE DE √âXITO
  puts "\nüéâ ¬°FIX SIMPLIFICADO APLICADO!"
  puts "üî• baseConfigurationReference: Limpiado de Runner y Pods"
  puts "üîç Framework search paths: Configurados correctamente"
  puts "üéØ CocoaPods: Deber√≠a poder aplicar configuraci√≥n sin conflictos"
  puts "‚úÖ BoringSSL-GRPC: Deber√≠a encontrarse ahora\n"
end
