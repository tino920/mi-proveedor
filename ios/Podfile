# 📱 PODFILE CORREGIDO PARA MIPROVEEDOR
# Configuración limpia sin dependencias incorrectas

platform :ios, '12.0'

# Configuraciones importantes  
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  # 🔥 FLUTTER PODS AUTOMÁTICO (esto es lo único que necesitamos)
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

# 📱 CONFIGURACIONES POST-INSTALACIÓN SIMPLIFICADAS
post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # 🎯 CONFIGURAR DEPLOYMENT TARGET
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
    end
  end
  
  # ✅ MENSAJE DE ÉXITO
  puts "\n🎉 ¡Pods instalados correctamente para MiProveedor!"
  puts "📱 Configuración iOS limpia y funcional"
  puts "🔥 Flutter dependencies gestionadas automáticamente"
  puts "\n✅ Listo para build iOS\n"
end
