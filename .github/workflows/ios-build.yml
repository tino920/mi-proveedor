# 🚀 GITHUB ACTIONS - BUILD iOS DEFINITIVO - MiProveedor
# Con Firebase .xcfilelist fix integrado
# Configuración coherente + fix específico para archivos faltantes

name: 🍎 iOS Build - MiProveedor (Firebase Fix)

on:
  push:
    branches: [ main, develop, ios-* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.24.3'
  JAVA_VERSION: '17'

jobs:
  # 🧪 ANÁLISIS RÁPIDO
  analyze:
    name: 🔍 Análisis
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        
    - name: 📦 Dependencies
      run: flutter pub get
      
    - name: 🔍 Analyze
      run: flutter analyze --no-fatal-infos || echo "⚠️ Analyzer warnings ignorados"

  # 📱 BUILD iOS CON FIREBASE FIX
  build-ios:
    name: 🍎 Build iOS + Firebase Fix
    runs-on: macos-latest
    needs: analyze
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🍎 Setup Xcode 15.4 (Firebase Compatible)
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.4'
        
    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: 🔥 Reset Completo
      run: |
        echo "🎯 Reset completo para configuración coherente..."
        flutter clean
        rm -rf ios/Pods/
        rm -f ios/Podfile.lock
        rm -rf ios/.symlinks/
        rm -rf ios/Runner.xcworkspace/
        rm -rf build/
        rm -rf .dart_tool/
        echo "✅ Caches eliminados"

    - name: 📦 Flutter Pub Get
      run: |
        echo "📦 Regenerando dependencies..."
        flutter pub get
        echo "✅ Dependencies regeneradas"

    - name: 🔍 Verificar Firebase Config
      run: |
        if [ -f "ios/Runner/GoogleService-Info.plist" ]; then
          echo "✅ GoogleService-Info.plist encontrado"
        else
          echo "⚠️ GoogleService-Info.plist NO encontrado"
        fi

    - name: 🔥 CocoaPods Install + Firebase XCFilelist Fix
      run: |
        echo "🍎 CocoaPods install + Firebase fix..."
        cd ios
        
        # Pod install
        pod install --repo-update --clean-install
        echo "✅ CocoaPods install completado"
        
        # APLICAR FIREBASE XCFILELIST FIX INMEDIATAMENTE
        echo ""
        echo "🔥 APLICANDO FIREBASE XCFILELIST FIX..."
        
        # Lista de targets Firebase que necesitan .xcfilelist
        FIREBASE_TARGETS=("FirebaseAnalytics" "GoogleAppMeasurement" "FirebaseCore" "FirebaseAuth" "FirebaseFirestore" "FirebaseStorage")
        
        for target in "${FIREBASE_TARGETS[@]}"; do
          target_dir="Pods/Target Support Files/${target}"
          
          if [ -d "$target_dir" ]; then
            echo "📁 Procesando: $target"
            
            # Crear input file si no existe
            input_file="${target_dir}/${target}-xcframeworks-input-files.xcfilelist"
            if [ ! -f "$input_file" ]; then
              echo "📝 Creando: $input_file"
              cat > "$input_file" << EOF
        # Generated by MobilePro Firebase Fix
        # Input files for $target xcframeworks
        \${PODS_ROOT}/Target Support Files/$target/$target.xcframework
        EOF
            fi
            
            # Crear output file si no existe
            output_file="${target_dir}/${target}-xcframeworks-output-files.xcfilelist"
            if [ ! -f "$output_file" ]; then
              echo "📝 Creando: $output_file"
              cat > "$output_file" << EOF
        # Generated by MobilePro Firebase Fix
        # Output files for $target xcframeworks
        \${TARGET_BUILD_DIR}/\${FRAMEWORKS_FOLDER_PATH}/$target.framework
        EOF
            fi
            
            echo "✅ $target: archivos .xcfilelist verificados"
          else
            echo "⚠️ $target: directorio no encontrado"
          fi
        done
        
        # Corregir paths absolutos en project.pbxproj
        echo ""
        echo "🔧 Corrigiendo paths absolutos en project.pbxproj..."
        if [ -f "Runner.xcodeproj/project.pbxproj" ]; then
          # Backup
          cp "Runner.xcodeproj/project.pbxproj" "Runner.xcodeproj/project.pbxproj.backup"
          
          # Corregir paths /Target Support Files/ a ${PODS_ROOT}/Target Support Files/
          sed -i '' 's|"/Target Support Files/|"${PODS_ROOT}/Target Support Files/|g' "Runner.xcodeproj/project.pbxproj"
          
          if ! diff "Runner.xcodeproj/project.pbxproj" "Runner.xcodeproj/project.pbxproj.backup" > /dev/null; then
            echo "🔧 Paths absolutos corregidos"
          else
            echo "✅ No se encontraron paths absolutos incorrectos"
          fi
          
          rm "Runner.xcodeproj/project.pbxproj.backup"
        fi
        
        echo ""
        echo "🔍 Verificación final Firebase .xcfilelist:"
        for target in "${FIREBASE_TARGETS[@]}"; do
          target_dir="Pods/Target Support Files/${target}"
          if [ -d "$target_dir" ]; then
            input_file="${target_dir}/${target}-xcframeworks-input-files.xcfilelist"
            output_file="${target_dir}/${target}-xcframeworks-output-files.xcfilelist"
            
            if [ -f "$input_file" ] && [ -f "$output_file" ]; then
              echo "✅ $target: input ✅ output ✅"
            else
              echo "❌ $target: archivos faltantes"
            fi
          fi
        done
        
        echo ""
        echo "🔥 FIREBASE XCFILELIST FIX COMPLETADO"

    - name: 🔨 Build iOS
      run: |
        echo "🔨 Iniciando build iOS..."
        export FLUTTER_BUILD_MODE=release
        export COCOAPODS_DISABLE_STATS=true
        
        flutter build ios --release --no-codesign --verbose
        
        echo "✅ Build iOS completado"

    - name: 📦 Create IPA
      run: |
        echo "📦 Creando archivo IPA..."
        cd build/ios/iphoneos
        
        mkdir -p Payload
        cp -r Runner.app Payload/
        
        BUILD_NUMBER=${{ github.run_number }}
        DATE=$(date '+%Y%m%d_%H%M')
        IPA_NAME="MiProveedor-Firebase-Fix-${BUILD_NUMBER}-${DATE}.ipa"
        
        zip -r "${IPA_NAME}" Payload/
        mv "${IPA_NAME}" ../../../
        
        echo "📱 IPA creado: ${IPA_NAME}"

    - name: ⬆️ Upload IPA
      uses: actions/upload-artifact@v4
      with:
        name: MiProveedor-Firebase-Fix-Build-${{ github.run_number }}
        path: MiProveedor-Firebase-Fix-*.ipa
        retention-days: 30

    - name: 🎉 Success Summary
      run: |
        echo "🎉 BUILD CON FIREBASE FIX EXITOSO!"
        echo "=================================="
        echo "✅ Firebase .xcfilelist: Archivos creados automáticamente"
        echo "✅ Paths absolutos: Corregidos en project.pbxproj"
        echo "✅ CocoaPods: Configuración aplicada sin conflictos"
        echo "✅ Build: Completado sin errores"
        echo ""
        echo "🔥 FIX ESPECÍFICO APLICADO PARA:"
        echo "   - FirebaseAnalytics xcframeworks files"
        echo "   - GoogleAppMeasurement xcframeworks files"
        echo "   - Paths absolutos incorrectos"
        echo ""
        echo "📥 Descarga el artifact desde GitHub Actions"
