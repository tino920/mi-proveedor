#!/bin/bash

# MobilePro - FIX ESPECÍFICO FIREBASE XCFILELIST
# Crear archivos .xcfilelist faltantes para Firebase Analytics y GoogleAppMeasurement
# Ejecutar desde directorio ios/ después de pod install

echo "🔥 FIX FIREBASE XCFILELIST - MobilePro"
echo "====================================="

echo "📂 Working directory: $(pwd)"

# Verificar que estamos en el directorio correcto
if [ ! -d "Pods" ]; then
    echo "❌ Error: Directorio Pods no encontrado. Ejecutar desde ios/"
    exit 1
fi

echo "✅ Directorio Pods encontrado"

# Lista de targets Firebase que necesitan .xcfilelist files
FIREBASE_TARGETS=(
    "FirebaseAnalytics"
    "GoogleAppMeasurement" 
    "FirebaseCore"
    "FirebaseAuth"
    "FirebaseFirestore"
    "FirebaseStorage"
    "FirebaseMessaging"
    "FirebaseCrashlytics"
)

echo ""
echo "🔍 Verificando y creando archivos .xcfilelist para Firebase targets..."

for target in "${FIREBASE_TARGETS[@]}"; do
    target_dir="Pods/Target Support Files/${target}"
    
    if [ -d "$target_dir" ]; then
        echo ""
        echo "📁 Procesando: $target"
        
        # Archivos .xcfilelist que necesita cada target
        input_file="${target_dir}/${target}-xcframeworks-input-files.xcfilelist"
        output_file="${target_dir}/${target}-xcframeworks-output-files.xcfilelist"
        
        # Crear input file si no existe
        if [ ! -f "$input_file" ]; then
            echo "📝 Creando: $input_file"
            cat > "$input_file" << EOF
# Generated by MobilePro Firebase Fix
# Input files for $target xcframeworks
\${PODS_ROOT}/Target Support Files/$target/$target.xcframework
EOF
        else
            echo "✅ Ya existe: $input_file"
        fi
        
        # Crear output file si no existe
        if [ ! -f "$output_file" ]; then
            echo "📝 Creando: $output_file"
            cat > "$output_file" << EOF
# Generated by MobilePro Firebase Fix  
# Output files for $target xcframeworks
\${TARGET_BUILD_DIR}/\${FRAMEWORKS_FOLDER_PATH}/$target.framework
EOF
        else
            echo "✅ Ya existe: $output_file"
        fi
        
        echo "✅ $target: archivos .xcfilelist verificados"
    else
        echo "⚠️ Target directory no encontrado: $target_dir"
    fi
done

echo ""
echo "🔧 Corrigiendo paths absolutos en project.pbxproj..."

# Verificar si el project.pbxproj tiene paths absolutos incorrectos
if [ -f "Runner.xcodeproj/project.pbxproj" ]; then
    # Backup
    cp "Runner.xcodeproj/project.pbxproj" "Runner.xcodeproj/project.pbxproj.backup"
    
    # Corregir paths que empiecen con /Target Support Files/ 
    sed -i '' 's|"/Target Support Files/|"${PODS_ROOT}/Target Support Files/|g' "Runner.xcodeproj/project.pbxproj"
    
    # Verificar si se hicieron cambios
    if diff "Runner.xcodeproj/project.pbxproj" "Runner.xcodeproj/project.pbxproj.backup" > /dev/null; then
        echo "✅ No se encontraron paths absolutos incorrectos"
        rm "Runner.xcodeproj/project.pbxproj.backup"
    else
        echo "🔧 Paths absolutos corregidos en project.pbxproj"
        echo "📋 Backup guardado como project.pbxproj.backup"
    fi
else
    echo "⚠️ project.pbxproj no encontrado"
fi

echo ""
echo "🔍 Verificación final..."

# Verificar archivos creados
for target in "${FIREBASE_TARGETS[@]}"; do
    target_dir="Pods/Target Support Files/${target}"
    if [ -d "$target_dir" ]; then
        input_file="${target_dir}/${target}-xcframeworks-input-files.xcfilelist"
        output_file="${target_dir}/${target}-xcframeworks-output-files.xcfilelist"
        
        input_exists=""
        output_exists=""
        
        if [ -f "$input_file" ]; then
            input_exists="✅"
        else
            input_exists="❌"
        fi
        
        if [ -f "$output_file" ]; then
            output_exists="✅"
        else
            output_exists="❌"
        fi
        
        echo "$target: input $input_exists output $output_exists"
    fi
done

echo ""
echo "✅ FIX FIREBASE XCFILELIST COMPLETADO"
echo "🎯 Archivos .xcfilelist creados para todos los targets Firebase"
echo "🔧 Paths absolutos corregidos en project.pbxproj"  
echo "🚀 Proyecto listo para build iOS"
