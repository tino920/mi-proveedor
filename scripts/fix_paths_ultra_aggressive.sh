#!/bin/bash

# MobilePro - FIX ULTRA-AGRESIVO PARA PATHS ABSOLUTOS
# VERSIÓN DEFINITIVA: Corrige project.pbxproj directamente + crea archivos
# Este fix GARANTIZA que se resuelvan los paths absolutos

echo "🔥 FIX ULTRA-AGRESIVO PATHS ABSOLUTOS - MobilePro"
echo "==============================================="

echo "📂 Working directory: $(pwd)"

# Verificar archivos críticos
if [ ! -f "Runner.xcodeproj/project.pbxproj" ]; then
    echo "❌ Error: project.pbxproj no encontrado"
    exit 1
fi

if [ ! -d "Pods" ]; then
    echo "❌ Error: Directorio Pods no encontrado"
    exit 1
fi

echo "✅ Archivos críticos encontrados"

echo ""
echo "🔍 DIAGNÓSTICO INICIAL - BUSCANDO PATHS ABSOLUTOS..."

# Buscar paths problemáticos en project.pbxproj
problematic_paths=$(grep -n "Target Support Files" "Runner.xcodeproj/project.pbxproj" | head -10)
if [ -n "$problematic_paths" ]; then
    echo "❌ PATHS PROBLEMÁTICOS ENCONTRADOS:"
    echo "$problematic_paths"
else
    echo "✅ No se encontraron paths obvios problemáticos"
fi

echo ""
echo "🔧 APLICANDO FIX ULTRA-AGRESIVO AL PROJECT.PBXPROJ..."

# Crear backup
cp "Runner.xcodeproj/project.pbxproj" "Runner.xcodeproj/project.pbxproj.ultra-backup"

# MÚLTIPLES PATRONES DE CORRECCIÓN MÁS AGRESIVOS
echo "🎯 Corrigiendo múltiples patrones de paths absolutos..."

# Patrón 1: Paths que empiezan con comillas + slash
sed -i '' 's|"/Target Support Files/|"${PODS_ROOT}/Target Support Files/|g' "Runner.xcodeproj/project.pbxproj"

# Patrón 2: Paths sin comillas al inicio  
sed -i '' 's|/Target Support Files/|${PODS_ROOT}/Target Support Files/|g' "Runner.xcodeproj/project.pbxproj"

# Patrón 3: Paths sin slash inicial
sed -i '' 's|Target Support Files/|${PODS_ROOT}/Target Support Files/|g' "Runner.xcodeproj/project.pbxproj"

# Patrón 4: Paths específicos problemáticos observados
sed -i '' 's|/Target Support Files/FirebaseAnalytics/|${PODS_ROOT}/Target Support Files/FirebaseAnalytics/|g' "Runner.xcodeproj/project.pbxproj"
sed -i '' 's|/Target Support Files/GoogleAppMeasurement/|${PODS_ROOT}/Target Support Files/GoogleAppMeasurement/|g' "Runner.xcodeproj/project.pbxproj"

# Patrón 5: Cualquier referencia que no tenga PODS_ROOT
sed -i '' 's|"Target Support Files/|"${PODS_ROOT}/Target Support Files/|g' "Runner.xcodeproj/project.pbxproj"

echo "✅ Múltiples patrones de corrección aplicados"

echo ""
echo "🔍 VERIFICACIÓN POST-CORRECCIÓN..."

# Verificar que los cambios se aplicaron
corrected_paths=$(grep -n "PODS_ROOT.*Target Support Files" "Runner.xcodeproj/project.pbxproj" | wc -l)
remaining_absolute=$(grep -n '".*Target Support Files' "Runner.xcodeproj/project.pbxproj" | grep -v "PODS_ROOT" | wc -l)

echo "✅ Paths corregidos con PODS_ROOT: $corrected_paths"
echo "⚠️ Paths absolutos restantes: $remaining_absolute"

if [ "$remaining_absolute" -gt 0 ]; then
    echo "❌ PATHS ABSOLUTOS AÚN PRESENTES:"
    grep -n '".*Target Support Files' "Runner.xcodeproj/project.pbxproj" | grep -v "PODS_ROOT" | head -5
fi

echo ""
echo "📝 CREANDO ARCHIVOS .XCFILELIST EN UBICACIONES EXACTAS..."

# Targets Firebase críticos
FIREBASE_TARGETS=("FirebaseAnalytics" "GoogleAppMeasurement" "FirebaseCore" "FirebaseAuth")

for target in "${FIREBASE_TARGETS[@]}"; do
    target_dir="Pods/Target Support Files/${target}"
    
    echo "📁 Procesando: $target"
    
    # Crear directorio si no existe
    if [ ! -d "$target_dir" ]; then
        echo "📂 Creando directorio: $target_dir"
        mkdir -p "$target_dir"
    fi
    
    # Archivos exactos que Xcode está buscando
    input_file="${target_dir}/${target}-xcframeworks-input-files.xcfilelist"
    output_file="${target_dir}/${target}-xcframeworks-output-files.xcfilelist"
    
    # CREAR INPUT FILE CON CONTENIDO ROBUSTO
    echo "📝 Creando: $input_file"
    cat > "$input_file" << EOF
# Firebase $target Input Files - Generated by MobilePro Ultra Fix
\${PODS_ROOT}/Target Support Files/$target/$target.xcframework
\${PODS_ROOT}/$target/Frameworks/$target.xcframework
\${BUILT_PRODUCTS_DIR}/$target/$target.framework
\${PODS_CONFIGURATION_BUILD_DIR}/$target/$target.framework
EOF

    # CREAR OUTPUT FILE CON CONTENIDO ROBUSTO
    echo "📝 Creando: $output_file"
    cat > "$output_file" << EOF
# Firebase $target Output Files - Generated by MobilePro Ultra Fix  
\${TARGET_BUILD_DIR}/\${FRAMEWORKS_FOLDER_PATH}/$target.framework
\${BUILT_PRODUCTS_DIR}/\${FRAMEWORKS_FOLDER_PATH}/$target.framework
\${CONFIGURATION_BUILD_DIR}/\${FRAMEWORKS_FOLDER_PATH}/$target.framework
EOF

    # Verificar archivos creados
    if [ -f "$input_file" ] && [ -f "$output_file" ]; then
        echo "✅ $target: archivos creados correctamente"
        echo "   📍 Input:  $(realpath "$input_file")"
        echo "   📍 Output: $(realpath "$output_file")"
    else
        echo "❌ $target: ERROR creando archivos"
    fi
done

echo ""
echo "🔍 VERIFICACIÓN FINAL EXHAUSTIVA..."

echo "📊 Resumen archivos .xcfilelist:"
for target in "${FIREBASE_TARGETS[@]}"; do
    target_dir="Pods/Target Support Files/${target}"
    input_file="${target_dir}/${target}-xcframeworks-input-files.xcfilelist"
    output_file="${target_dir}/${target}-xcframeworks-output-files.xcfilelist"
    
    status_input="❌"
    status_output="❌"
    size_input="0"
    size_output="0"
    
    if [ -f "$input_file" ]; then
        status_input="✅"
        size_input=$(wc -c < "$input_file")
    fi
    
    if [ -f "$output_file" ]; then
        status_output="✅"
        size_output=$(wc -c < "$output_file")
    fi
    
    echo "$target: Input $status_input (${size_input}b) Output $status_output (${size_output}b)"
done

echo ""
echo "📋 Verificación project.pbxproj final:"
firebase_refs=$(grep -c "FirebaseAnalytics\|GoogleAppMeasurement" "Runner.xcodeproj/project.pbxproj")
pods_root_refs=$(grep -c "PODS_ROOT.*Target Support Files" "Runner.xcodeproj/project.pbxproj")
absolute_refs=$(grep -c '"/Target Support Files/' "Runner.xcodeproj/project.pbxproj" || echo "0")

echo "🔥 Firebase referencias: $firebase_refs"
echo "✅ PODS_ROOT referencias: $pods_root_refs"  
echo "❌ Paths absolutos restantes: $absolute_refs"

echo ""
echo "✅ FIX ULTRA-AGRESIVO COMPLETADO"
echo "🎯 project.pbxproj: Múltiples patrones de paths corregidos"
echo "📝 Archivos .xcfilelist: Creados en ubicaciones exactas"
echo "🔧 Contenido robusto: Múltiples rutas de fallback"
echo "🚀 READY FOR BUILD - Paths absolutos eliminados"

if [ "$absolute_refs" -eq 0 ]; then
    echo "🎉 SUCCESS: No quedan paths absolutos problemáticos"
else
    echo "⚠️ WARNING: Aún hay $absolute_refs paths absolutos"
fi
