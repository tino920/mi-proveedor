rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Permitir acceso a empresas solo a sus miembros
    match /companies/{companyId} {
      allow read: if request.auth != null && 
        request.auth.uid in resource.data.members;
      allow write: if request.auth != null && 
        request.auth.uid in resource.data.admins;
      
      // Productos - solo admin puede escribir, todos pueden leer
      match /products/{productId} {
        allow read: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/companies/$(companyId)).data.members;
        allow write: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/companies/$(companyId)).data.admins;
      }
      
      // Proveedores - solo admin puede escribir
      match /suppliers/{supplierId} {
        allow read: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/companies/$(companyId)).data.members;
        allow write: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/companies/$(companyId)).data.admins;
      }
      
      // Pedidos - empleados pueden crear, admin puede modificar
      match /orders/{orderId} {
        allow read: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/companies/$(companyId)).data.members;
        allow create: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/companies/$(companyId)).data.members;
        allow update: if request.auth != null && 
          (request.auth.uid == resource.data.employeeId || 
           request.auth.uid in get(/databases/$(database)/documents/companies/$(companyId)).data.admins);
        allow delete: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/companies/$(companyId)).data.admins;
      }
      
      // Empleados - solo admin puede gestionar
      match /employees/{employeeId} {
        allow read: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/companies/$(companyId)).data.members;
        allow write: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/companies/$(companyId)).data.admins;
      }
    }
    
    // Usuarios - cada usuario puede leer/escribir su propio documento
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
